// ------------------------------------------------------------
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
// ------------------------------------------------------------

// Currently, our spec is not approved by ARM so this is a workaround that the CADL team gave us
// so that we can preface our paths with {rootScope}
// To generate {rootScope} in the path, use the tag --import "./aksrootscope.cadl" while compiling

import "@cadl-lang/openapi";
import "@cadl-lang/rest";
import "@azure-tools/cadl-autorest";
import "@azure-tools/cadl-azure-resource-manager";
import "@azure-tools/cadl-azure-core";

namespace Azure.ResourceManager.Radius;

using Cadl.Http;
using Cadl.Rest;
using OpenAPI;
using Autorest;
using Azure.Core;
using Azure.ResourceManager.Foundations;

@doc("Api Parameters")
model Params<RootScopeParam> {
  ...ApiVersionParameter,
  ...RootScopeParam
}
interface RootScopeResourceOperations<TResource extends ArmResource, TProperties extends object, TRootParams> {
  @doc("Retrieves information about a {name}", TResource)
  get is ArmResourceRead<TResource,Params<TRootParams>>;
  @doc("Creates or updates a {name}", TResource)
  createOrUpdate is ArmResourceCreateOrUpdateSync<TResource,Params<TRootParams>>;
  @doc("Lists information about all {name}s in the given root scope", TResource)
  listByRootScope is ArmResourceListByParent<TResource,Params<TRootParams>>
}

// ResourceOperationWithSyncDelete, ResourceOperationWithAsyncDelete intersfaces will be moved into RootScopeResourceOperations when we have async delete support for all link resources.
interface ResourceOperationWithSyncDelete<TResource extends ArmResource, TProperties extends object, TRootParams> extends RootScopeResourceOperations<TResource, TProperties, TRootParams>{
  @doc("Deletes an existing {name}", TResource)
  delete is ArmResourceDeleteSync<TResource,Params<TRootParams>>;
}
interface ResourceOperationWithAsyncDelete<TResource extends ArmResource, TProperties extends object, TRootParams> extends RootScopeResourceOperations<TResource, TProperties, TRootParams>{
  @doc("Deletes an existing {name}", TResource)
  delete is ArmResourceDeleteAsync<TResource,Params<TRootParams>>;
}
