name: Create a new Project Radius release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "The tag to release. Must be a valid semver version (e.g. 1.2.3 or 1.2.3-rc.1)"
        required: true

jobs:
  release:
    name: Release
    runs-on: [self-hosted, 1ES.Pool=1ES-Radius]
    strategy:
      fail-fast: false
      matrix:
        include:
          - repo: radius
            branch: main
          - repo: deployment-engine
            branch: main
          - repo: bicep-extensibility
            branch: bicep-extensibility
    steps:
      - name: Validate semver input
        run: |
          if [[ ! ${{ github.event.inputs.tag }} =~ ^[0-9]+\.[0-9]+\.[0-9]+(-rc\.[0-9]+)?$ ]]; then
            echo "Invalid semver version: ${{ github.event.inputs.tag }}"
            exit 1
          fi
          if [[ ! ${{ github.event.inputs.tag }} =~ -rc\.[0-9]+$ ]]; then
            echo "FINAL_RELEASE=true" >> $GITHUB_ENV
          fi
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          repository: project-radius/${{ matrix.repo }}
          ref: ${{ matrix.branch }}
          token: ${{ secrets.GH_RAD_CI_BOT_PAT }}
      - name: Create and push tag
        run: |
          git config --global user.name "Radius CI Bot"
          git config --global user.email "radiuscoreteam@service.microsoft.com"
          git chechout -b release/${{ github.event.inputs.tag }}
          git pull origin release/${{ github.event.inputs.tag }}
          git tag v${{ github.event.inputs.tag }}
          git push origin --tags
          git push origin release/${{ github.event.inputs.tag }}
      - name: az CLI login
        if: ${{ env.FINAL_RELEASE == 'true' }} && ${{ matrix.repo == 'radius' }}
        run: |
          az login --service-principal \
            --username ${{ secrets.AZURE_SP_TESTS_APPID }} \
            --password ${{ secrets.AZURE_SP_TESTS_PASSWORD }} \
            --tenant ${{ secrets.AZURE_SP_TESTS_TENANTID }}
      - name: Clear Azure CDN endpoint cache
        uses: azure/cli@v1
        if: ${{ env.FINAL_RELEASE == 'true' }} && ${{ matrix.repo == 'radius' }}
        with:
          inlineScript: |
            az cdn endpoint purge --subscription ${{ variables.ASSETS_SUBSCRIPTION }} --resource-group ${{ variables.ASSETS_RESOURCEGROUP }} --name ${{ variables.CDN_ENDPOINT_NAME }} --profile-name ${{ variables.CDN_PROFILE_NAME }} --content-paths "/*"
